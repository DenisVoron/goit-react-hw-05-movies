{"version":3,"file":"static/js/186.635a9fe6.chunk.js","mappings":"6LAoDA,UA9CgB,WACZ,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,YAENC,EAAAA,EAAAA,IAAaN,GACRO,MAAK,SAAAC,GACEJ,EAAWI,EAAKC,QAAQC,KAAI,gBAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,QAAnB,MAAkC,CAC1DC,OAAQF,EAAeG,SACvBF,QAASA,EAFe,IAK/B,GACZ,GAAE,CAACZ,KAGA,8BACKG,EAAQY,OAAS,GACX,8BACC,wBACKZ,EAAQO,KAAI,WAAsBM,GAAW,IAA9BH,EAA6B,EAA7BA,OAAQD,EAAqB,EAArBA,QACpB,OACI,2BACI,oCAAYC,MACZ,uBAAID,MAFCI,EAKhB,SAGN,sEAGlB,C,oLCxCKC,EAAU,gCACVC,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACoBC,MAAM,GAAD,OAAIH,EAAJ,sCAAyCC,IADlE,cACGG,EADH,gBAEUA,EAASC,OAFnB,0GAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACoBJ,MAAM,GAAD,OAAIH,EAAJ,gCAAmCC,EAAnC,4DAA8FM,IADvH,cACGH,EADH,gBAEUA,EAASC,OAFnB,0GAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAkCzB,GAAlC,uFACoBoB,MAAM,GAAD,OAAIH,EAAJ,iBAAoBjB,EAApB,oBAAkCkB,EAAlC,oBADzB,cACGG,EADH,gBAEUA,EAASC,OAFnB,0GAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAyB1B,GAAzB,uFACoBoB,MAAM,GAAD,OAAIH,EAAJ,iBAAoBjB,EAApB,4BAA0CkB,EAA1C,oBADzB,cACGG,EADH,gBAEUA,EAASC,OAFnB,0GAKA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BN,GAA5B,uFACoBoB,MAAM,GAAD,OAAIH,EAAJ,iBAAoBjB,EAApB,4BAA0CkB,EAA1C,2BADzB,cACGG,EADH,gBAEUA,EAASC,OAFnB,0G,sBCxBP,SAASK,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAO7B,KAAKwB,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/Reviews/Reviews.jsx","services/fetch-api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchReviews } from \"../../services/fetch-api\";\n\nconst Reviews = () => {\n    const { id } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n\n        fetchReviews(id)\n            .then(data => {\n                    setReviews(data.results.map(({ author_details, content }) => ({\n                        author: author_details.username,\n                        content: content,\n                    }))\n                    );\n                });\n    }, [id]);\n\n    return (\n        <>\n            {reviews.length > 0\n                ? (<section>\n                    <ul>\n                        {reviews.map(({ author, content }, index) => {\n                            return (\n                                <li key={index}>\n                                    <p>Author: {author}</p>\n                                    <p>{content}</p>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </section>)\n                : (<p>We don't have any reviews for this movie.</p>)}\n        </>\n    );\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.number.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Reviews;","const API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'e338843fab235d92204cc1e536c80b21';\n\n\nexport async function fetchHome() {\n    const response = await fetch(`${API_URL}trending/movie/day?api_key=${API_KEY}`);\n    return await response.json();\n}\n\nexport async function fetchMovies(query) {\n    const response = await fetch(`${API_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`);\n    return await response.json();\n}\n\nexport async function fetchMoviesDetails(id) {\n    const response = await fetch(`${API_URL}movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return await response.json();\n};\n\nexport async function fetchCast(id) {\n    const response = await fetch(`${API_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n    return await response.json();\n}\n\nexport async function fetchReviews(id) {\n    const response = await fetch(`${API_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return await response.json();\n}\n\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["id","useParams","useState","reviews","setReviews","useEffect","fetchReviews","then","data","results","map","author_details","content","author","username","length","index","API_URL","API_KEY","fetchHome","fetch","response","json","fetchMovies","query","fetchMoviesDetails","fetchCast","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}