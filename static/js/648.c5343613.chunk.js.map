{"version":3,"file":"static/js/648.c5343613.chunk.js","mappings":"+PAEaA,EAAOC,EAAAA,GAAAA,KAAH,yDCAJC,EAAQD,EAAAA,GAAAA,IAAH,iGAOLE,EAAUF,EAAAA,GAAAA,IAAH,sGAMPG,EAAQH,EAAAA,GAAAA,GAAH,6CAILI,EAAaJ,EAAAA,GAAAA,EAAH,2CAIVK,EAAgBL,EAAAA,GAAAA,GAAH,6CAKbM,EAAgBN,EAAAA,GAAAA,EAAH,6CAKbO,EAAcP,EAAAA,GAAAA,EAAH,gEAMXQ,EAAaR,EAAAA,GAAAA,EAAH,sC,SC1BVS,EAAY,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OACxD,OACI,UAACZ,EAAD,YACI,SAACD,EAAD,CAAOc,IAAKL,EAAQM,IAAI,MACxB,4BACI,SAACb,EAAD,UACKQ,KAEL,SAACP,EAAD,gCAA4BQ,EAA5B,SACA,SAACP,EAAD,wBACA,SAACC,EAAD,UAAgBO,KAChB,SAACN,EAAD,sBACA,SAACC,EAAD,UAAaM,SAI5B,E,QC+DD,EAnFsB,WAAO,IAAD,IAC1B,GAA2BG,EAAAA,EAAAA,UAAS,CAAC,GAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,EAAQ,qBADGC,EAAAA,EAAAA,MACSC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAqCzC,OAnCAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBP,GAChBQ,MAAK,SAAAC,GACFV,EAAS,CACPT,OAAO,mCAAD,OAAqCmB,EAAKC,aAChDnB,MAAOkB,EAAKlB,MACZC,MAAOmB,OAAOC,SAA6B,GAApBH,EAAKI,cAC5BpB,SAAUgB,EAAKhB,SACfC,OAAQe,EAAKf,OACVoB,QAAO,SAACC,EAAKC,GAAN,OAAiBD,GAAOC,EAAMC,KAAO,KAArC,GAA4C,IACnDC,QAER,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAmBf,GAAE,CAACpB,KAIF,UAACrB,EAAD,YACE,SAAC,KAAD,CAAM4C,GAAIrB,EAAV,sBACA,SAACb,EAAD,CACEC,OAAQQ,EAAOR,OACfC,MAAOO,EAAOP,MACdC,MAAOM,EAAON,MACdC,SAAUK,EAAOL,SACjBC,OAAQI,EAAOJ,UAEjB,2BACE,yBACE,SAAC,KAAD,CAAM6B,GAAG,OAAOnB,MAAO,CAAEC,KAAMH,GAA/B,qBAEF,yBACE,SAAC,KAAD,CAAMqB,GAAG,UAAUnB,MAAO,CAAEC,KAAMH,GAAlC,2BAGJ,SAAC,EAAAsB,SAAD,CAAUC,UAAU,6CAApB,UACE,SAAC,KAAD,QAIP,C,oLCzEKC,EAAU,gCACVC,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACoBC,MAAM,GAAD,OAAIH,EAAJ,sCAAyCC,IADlE,cACGG,EADH,gBAEUA,EAASC,OAFnB,0GAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACoBJ,MAAM,GAAD,OAAIH,EAAJ,gCAAmCC,EAAnC,4DAA8FM,IADvH,cACGH,EADH,gBAEUA,EAASC,OAFnB,0GAKA,SAAexB,EAAtB,+CAAO,OAAP,oBAAO,WAAkCP,GAAlC,uFACoB6B,MAAM,GAAD,OAAIH,EAAJ,iBAAoB1B,EAApB,oBAAkC2B,EAAlC,oBADzB,cACGG,EADH,gBAEUA,EAASC,OAFnB,0GAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAyBlC,GAAzB,uFACoB6B,MAAM,GAAD,OAAIH,EAAJ,iBAAoB1B,EAApB,4BAA0C2B,EAA1C,oBADzB,cACGG,EADH,gBAEUA,EAASC,OAFnB,0GAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BnC,GAA5B,uFACoB6B,MAAM,GAAD,OAAIH,EAAJ,iBAAoB1B,EAApB,4BAA0C2B,EAA1C,2BADzB,cACGG,EADH,gBAEUA,EAASC,OAFnB,0G,sBCxBP,SAASK,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOzB,GAEP,YADAmB,EAAOnB,EAET,CAEIwB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOrC,KAAKgC,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["components/MoviesDetails/MoviesDetails.styled.js","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","components/MoviesDetails/MoviesDetails.jsx","services/fetch-api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Main = styled.main`\n  \n  padding-bottom: 16px;\n  \n`;\n\n/*export const Container = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;*/","import styled from \"styled-components\";\n\nexport const Image = styled.img`\n  width: 200px;\n  height: auto;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  border-bottom: 1px solid black;\n  padding-bottom: 16px;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 700;\n`;\n\nexport const DescrScore = styled.p`\n  margin: 0 auto;\n`;\n\nexport const OverwiewTitle = styled.h3`\n  font-weight: 500;\n`;\n\n//overwiewDescr\nexport const OverwiewDescr = styled.p`\n  font-size:medium;\n`;\n\n//GenresDescr\nexport const GenresDescr = styled.p`\n  font-weight: 500;\n  font-size:17px;\n`;\n\n//GenresText\nexport const GenresText = styled.p`\n  margin: 0;\n`;","import PropTypes from 'prop-types';\nimport {\n    Image,\n    Wrapper,\n    DescrScore,\n    Title,\n    OverwiewTitle,\n    OverwiewDescr,\n    GenresDescr,\n    GenresText\n} from './MovieInfo.styled';\n\n\nexport const MovieInfo = ({ poster, title, score, overview, genres }) => {\n    return (\n        <Wrapper>\n            <Image src={poster} alt=\"\" />\n            <div>\n                <Title>\n                    {title}\n                </Title>\n                <DescrScore>{`User Score: ${score} %`}</DescrScore>\n                <OverwiewTitle>Overwiew</OverwiewTitle>\n                <OverwiewDescr>{overview}</OverwiewDescr>\n                <GenresDescr>Genres</GenresDescr>\n                <GenresText>{genres}</GenresText>\n            </div>\n        </Wrapper>\n    );\n};\n\nMovieInfo.propTypes = {\n  poster: PropTypes.string,\n  title: PropTypes.string,\n  score: PropTypes.number,\n  overview: PropTypes.string,\n  genres: PropTypes.string,\n};","import PropTypes from 'prop-types';\nimport { useParams, useLocation, Link, Outlet } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { Suspense } from 'react';\n\nimport { Main } from \"./MoviesDetails.styled\";\nimport { MovieInfo } from \"components/MovieInfo/MovieInfo\";\nimport { fetchMoviesDetails } from \"../../services/fetch-api\";\n\nconst MoviesDetails = () => {\n  const [movies, setMovie] = useState({});\n  const { id } = useParams();\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    fetchMoviesDetails(id)\n      .then(data => {\n          setMovie({\n            poster: `https://image.tmdb.org/t/p/w500/${data.poster_path}`,\n            title: data.title,\n            score: Number.parseInt(data.vote_average * 10),\n            overview: data.overview,\n            genres: data.genres\n              .reduce((acc, genre) => (acc += genre.name + '. '), '')\n              .trim(),\n          })\n      })\n      .catch(error => console.log(error));\n\n    /*function fetchMovie() {\n      fetch(`${API_URL}movie/${id}?api_key=${API_KEY}&language=en-US`)\n        .then(response => response.json())\n        .then(data => {\n          setMovie({\n            poster: `https://image.tmdb.org/t/p/w500/${data.poster_path}`,\n            title: data.title,\n            score: Number.parseInt(data.vote_average * 10),\n            overview: data.overview,\n            genres: data.genres\n              .reduce((acc, genre) => (acc += genre.name + '. '), '')\n              .trim(),\n          })\n        })\n    }\n    \n    fetchMovie();*/\n  }, [id]);\n\n\n  return (\n    <Main>\n      <Link to={backLink}>Go Back</Link>\n      <MovieInfo\n        poster={movies.poster}\n        title={movies.title}\n        score={movies.score}\n        overview={movies.overview}\n        genres={movies.genres}\n      />\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from: backLink }}>Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: backLink }}>Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading page...</div>}>\n        <Outlet />\n      </Suspense>\n    </Main>\n  );\n};\n\n\nMoviesDetails.propTypes = {\n  details: PropTypes.arrayOf(\n    PropTypes.exact({\n      poster_path: PropTypes.string,\n      original_title: PropTypes.string.isRequired,\n      popularity: PropTypes.number.isRequired,\n      overview: PropTypes.string.isRequired,\n      genres: PropTypes.arrayOf(\n        PropTypes.exact({\n          name: PropTypes.string.isRequired,\n        })\n      ),\n    })\n  )\n};\n\nexport default MoviesDetails;","const API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'e338843fab235d92204cc1e536c80b21';\n\n\nexport async function fetchHome() {\n    const response = await fetch(`${API_URL}trending/movie/day?api_key=${API_KEY}`);\n    return await response.json();\n}\n\nexport async function fetchMovies(query) {\n    const response = await fetch(`${API_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`);\n    return await response.json();\n}\n\nexport async function fetchMoviesDetails(id) {\n    const response = await fetch(`${API_URL}movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return await response.json();\n};\n\nexport async function fetchCast(id) {\n    const response = await fetch(`${API_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n    return await response.json();\n}\n\nexport async function fetchReviews(id) {\n    const response = await fetch(`${API_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return await response.json();\n}\n\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Main","styled","Image","Wrapper","Title","DescrScore","OverwiewTitle","OverwiewDescr","GenresDescr","GenresText","MovieInfo","poster","title","score","overview","genres","src","alt","useState","movies","setMovie","id","useParams","backLink","useLocation","state","from","useEffect","fetchMoviesDetails","then","data","poster_path","Number","parseInt","vote_average","reduce","acc","genre","name","trim","catch","error","console","log","to","Suspense","fallback","API_URL","API_KEY","fetchHome","fetch","response","json","fetchMovies","query","fetchCast","fetchReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}